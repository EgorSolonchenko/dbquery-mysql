{"body":"MySQL Query builder for PHP\r\n===========================\r\n\r\n[![Build Status](https://secure.travis-ci.org/jasny/DBQuery-MySQL.png?branch=master)](http://travis-ci.org/jasny/DBQuery-MySQL)\r\n\r\nThis library is designed to be the ultimate tool for building, splitting and modifying SQL queries.\r\n\r\nAutomatic smart quoting helps against SQL injection and problems with reserved keywords.\r\n\r\nDBQuery can be used standalone, in conjunction with [Jasny's DB class](http://github.com/jasny/DB) or in almost any\r\nframework.\r\n\r\n## Installation ##\r\n\r\nDBQuery can be easily installed using [composer](http://getcomposer.org/). Alternatively you can simply download the\r\n.zip and copy the file from the 'src' folder.\r\n\r\n## Examples ##\r\n\r\nAn example to simple to be using a query builder\r\n\r\n    <?php\r\n        use Jasny\\MySQL\\DBQuery;\r\n        \r\n        $query = DBQuery::select()->columns('id, name')->from('foo')->where('active = 1');\r\n        $result = $mysqli->query($query); // SELECT `id`, `name` FROM `foo` WHERE `active` = 1\r\n\r\nDynamicly apply paging and filtering on a query\r\n\r\n    <?php\r\n        use Jasny\\MySQL\\DBQuery;\r\n        \r\n        $query = new DBQuery(\"SELECT * FROM foo LEFT JOIN bar ON foo.bar_id = bar.id WHERE active = 1 LIMIT 25\");\r\n        if (isset($_GET['page'])) $query->page(3);\r\n\r\n        $filter = isset($_POST['filter']) ? $_POST['filter'] : array(); // array('type' => 'bike', 'price between ? and ?' => array(10, 20))\r\n        foreach ($filter as $field => $value) {\r\n            $query->where($field, $value);\r\n        }\r\n\r\n        $result = $mysqli->query($query); // SELECT * FROM foo LEFT JOIN bar ON foo.bar_id = bar.id WHERE (active = 1) AND (`type` = \"bike\") AND (`price` between 10 and 20) LIMIT 25 OFFSET 50\r\n\r\nMap fields for an INSERT INTO ... SELECT ... ON DUPLICATE KEY query\r\n\r\n    <?php\r\n        use Jasny\\MySQL\\DBQuery;\r\n        \r\n        $columns = array(\r\n            'ref' => 'ref',\r\n            'man' => 'boy',\r\n            'woman' => 'girl',\r\n            'amount' => 'SUM(z.bucks)'\r\n        );\r\n\r\n        $select = DBQuery::select()->columns($columns)->from('foo')->innerJoin('z', 'foo.id = z.foo_id')->groupBy('foo.id');\r\n        $insert = DBQuery::insert()->into('abc')->columns(array_keys($columns))->set($select)->onDuplicateKeyUpdate();\r\n\r\n        $mysql->query($insert); // INSERT INTO `abc` (`ref`, `man`, `woman`, `amount`)\r\n                                //  SELECT `ref` AS `ref`, `boy` AS `man`, `girl` AS `woman`, SUM(`z`.`bucks`) AS `amount` FROM `foo` LEFT JOIN `z` ON `foo`.`id` = `z`.`foo_id` GROUP BY `foo`.id`\r\n                                //  ON DUPLICATE KEY UPDATE `ref` = VALUES(`ref`), `man` = VALUES(`man`), `woman` = VALUES(`woman`), `amount` = VALUES(`amount`)\r\n\r\n## API documentation (generated) ##\r\n\r\nhttp://jasny.github.com/DBQuery-MySQL/docs\r\n","google":"UA-32388850-2","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"The best and most complete query builder/parser for MySQL","name":"Dbquery-mysql"}